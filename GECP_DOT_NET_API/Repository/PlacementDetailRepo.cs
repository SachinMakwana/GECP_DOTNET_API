using GECP_DOT_NET_API.Database;
using GECP_DOT_NET_API.Helper;
using GECP_DOT_NET_API.Models;
using System;
using System.Collections.Generic;
using System.Linq;

namespace GECP_DOT_NET_API.Repository
{
    public class PlacementDetailRepo : IPlacementDetailRepo
    {
        GECPATAN_PRODContext DBEntities = new GECPATAN_PRODContext();

        public ServiceResponse<bool> AddPlacementDetail(PlacementDetailsVM detailsVM)
        {
            ServiceResponse<bool> serviceReponse = new ServiceResponse<bool>();
            try
            {
                using (DBEntities = new GECPATAN_PRODContext())
                {
                    PlacementDetail dbObject = detailsVM.ToContext();
                    // to avoid conflict of autogenerated id
                    dbObject.Id = new int();
                    DBEntities.PlacementDetails.Add(dbObject);
                    DBEntities.SaveChanges();

                    serviceReponse.data = true;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data added successfully";
                }
            }
            catch (Exception ex)
            {
                serviceReponse.data = false;
                serviceReponse.status_code = "000";
                serviceReponse.message = "Exception: " + ex.Message.ToString();

            }
            return serviceReponse;
        }

        public ServiceResponse<bool> DeletePlacementDetailForGraph(PlacementDetailsVM detailsVM)
        {
            ServiceResponse<bool> serviceReponse = new ServiceResponse<bool>();
            try
            {
                PlacementDetail dbObject = DBEntities.PlacementDetails.Where(m => m.Id == detailsVM.Id && m.IsDeleted != true).FirstOrDefault();
                if (dbObject == null)
                {
                    serviceReponse.data = false;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data does not exist";
                }
                else
                {


                    dbObject.IsDeleted = true;

                    DBEntities.SaveChanges();

                    serviceReponse.data = true;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data added successfully";

                }
            }
            catch (Exception ex)
            {
                serviceReponse.data = false;
                serviceReponse.status_code = "000";
                serviceReponse.message = "Exception: " + ex.Message.ToString();

            }
            return serviceReponse;
        }

        public ServiceResponse<List<PlacementDetailsVM>> GetPlacementDetails()
        {
            ServiceResponse<List<PlacementDetailsVM>> serviceReponse = new ServiceResponse<List<PlacementDetailsVM>>();
            try
            {
                using (DBEntities = new GECPATAN_PRODContext())
                {
                    var placementDetailList = DBEntities.PlacementDetails.Where(m => m.IsDeleted != true).Select(m => m.ToModel()).ToList();
                    serviceReponse.data = placementDetailList;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data fetched successfully";
                }
            }
            catch (Exception ex)
            {
                serviceReponse.data = null;
                serviceReponse.status_code = "000";
                serviceReponse.message = "Exception: " + ex.Message.ToString();
            }
            return serviceReponse;
        }

        public ServiceResponse<bool> UpdatePlacementDetail(PlacementDetailsVM detailsVM)
        {
            ServiceResponse<bool> serviceReponse = new ServiceResponse<bool>();
            try
            {

                PlacementDetail dbObject = DBEntities.PlacementDetails.Where(m => m.Id == detailsVM.Id).FirstOrDefault();
                if (dbObject == null)
                {
                    serviceReponse.data = false;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data does not exist";
                }
                else
                {
                    dbObject.DeptId = detailsVM.DeptId;
                    dbObject.TotalStudent = detailsVM.TotalStudent;
                    dbObject.PlacedStudent = detailsVM.PlacedStudent;
                    dbObject.HigestPackage = detailsVM.HigestPackage;
                    dbObject.LowestPackage = detailsVM.LowestPackage;
                    dbObject.PlacementYear = detailsVM.PlacementYear;
                    dbObject.NoOfCompany = detailsVM.NoOfCompany;
                    dbObject.NumberofRegisterdStudent   = detailsVM.NumberofRegisterdStudent;
                    dbObject.UpdatedDate = detailsVM.UpdatedDate;

                    DBEntities.SaveChanges();

                    serviceReponse.data = true;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data added successfully";

                }

            }
            catch (Exception ex)
            {
                serviceReponse.data = false;
                serviceReponse.status_code = "000";
                serviceReponse.message = "Exception: " + ex.Message.ToString();

            }
            return serviceReponse;
        }


    }
}
