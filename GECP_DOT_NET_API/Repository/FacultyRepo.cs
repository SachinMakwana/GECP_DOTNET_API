using GECP_DOT_NET_API.Database;
using GECP_DOT_NET_API.Helper;
using GECP_DOT_NET_API.Models;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;

namespace GECP_DOT_NET_API.Repository
{
    public class FacultyRepo : IFacultyRepo
    {
        GECP_ADMINContext DBEntities = new GECP_ADMINContext();
        public ServiceResponse<List<FacultyDetailsVM>> GetAllFacultyDetails()
        {
            ServiceResponse<List<FacultyDetailsVM>> serviceReponse = new ServiceResponse<List<FacultyDetailsVM>>();
            try
            {
                using (DBEntities = new GECP_ADMINContext())
                {
                    var facultyList = DBEntities.FacultyDetails.Where(m => m.IsDeleted != true).Select(m => m.ToModel()).ToList();
                    serviceReponse.data = facultyList;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data fetched successfully";
                }
            }catch (Exception ex)
            {
                serviceReponse.data = null;
                serviceReponse.status_code = "000";
                serviceReponse.message = "Exception: " + ex.Message.ToString();
            }
            return serviceReponse;
        }

        public ServiceResponse<bool> AddFacultyDetail(FacultyDetailsVM facultyDetailsVM)
        {
            ServiceResponse<bool> serviceReponse = new ServiceResponse<bool>();
            try
            {
                using (DBEntities = new GECP_ADMINContext())
                {
                    FacultyDetail dbObject = facultyDetailsVM.ToContext();
                    // to avoid conflict of autogenerated id
                    dbObject.Id = new int();
                    DBEntities.FacultyDetails.Add(dbObject);
                    DBEntities.SaveChanges();

                    serviceReponse.data = true;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data added successfully";
                }
            }
            catch (Exception ex)
            {
                serviceReponse.data = false;
                serviceReponse.status_code = "000";
                serviceReponse.message = "Exception: " + ex.Message.ToString();

            }
            return serviceReponse;
        }
        public ServiceResponse<bool> UpdateFacultyDetail(FacultyDetailsVM facultyDetailsVM)
        {
            ServiceResponse<bool> serviceReponse = new ServiceResponse<bool>();
            try
            {

                FacultyDetail dbObject = DBEntities.FacultyDetails.Where(m => m.Id == facultyDetailsVM.Id).FirstOrDefault();
                if (dbObject == null)
                {
                    serviceReponse.data = false;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data does not exist";
                }
                else
                {
                   
                    dbObject.DeptId = facultyDetailsVM.DeptId;
                    dbObject.Name = facultyDetailsVM.Name;
                    dbObject.Designation = facultyDetailsVM.Designation;
                    dbObject.UpdatedDate = facultyDetailsVM.UpdatedDate;
                    

                    DBEntities.SaveChanges();

                    serviceReponse.data = true;
                    serviceReponse.status_code = "200";
                    serviceReponse.message = "Data added successfully";

                }

            }
            catch (Exception ex)
            {
                serviceReponse.data = false;
                serviceReponse.status_code = "000";
                serviceReponse.message = "Exception: " + ex.Message.ToString();

            }
            return serviceReponse;
        }
  

    public ServiceResponse<bool> DeleteFacultyDetail(FacultyDetailsVM facultyDetailsVM)
    {
        ServiceResponse<bool> serviceReponse = new ServiceResponse<bool>();
        try
        {
            FacultyDetail dbObject = DBEntities.FacultyDetails.Where(m => m.Id == facultyDetailsVM.Id).FirstOrDefault();
            if (dbObject == null)
            {
                serviceReponse.data = false;
                serviceReponse.status_code = "200";
                serviceReponse.message = "Data does not exist";
            }
            else
            {


                dbObject.IsDeleted = true;

                DBEntities.SaveChanges();

                serviceReponse.data = true;
                serviceReponse.status_code = "200";
                serviceReponse.message = "Data added successfully";

            }
        }
        catch (Exception ex)
        {
            serviceReponse.data = false;
            serviceReponse.status_code = "000";
            serviceReponse.message = "Exception: " + ex.Message.ToString();

        }
        return serviceReponse;

    }
    }
}
